vacuum_zone:
  alias: Vacuum zone
  sequence:
  - condition: template
    value_template: '{{ vac_cond }}'
  - service: vacuum.send_command
    data:
      entity_id: 'vacuum.rockrobo'
      command: 'go_to'
      params:
        'spot_id': >
         '{% if vac_loc in state_attr('input_select.vacuum_locations', 'options') %}{{ vac_loc }}{% endif %}'
  - delay: 00:01:00
  - wait_template: "{{ is_state('vacuum.rockrobo', 'idle') }}"
    timeout: >
     '{% if vac_loc not in state_attr('input_select.vacuum_locations', 'options') %}00:00:01{% else %}00:05:00{% endif %}'
  - service: vacuum.send_command
    data_template:
      entity_id: 'vacuum.rockrobo'
      command: 'zoned_cleanup'
      params:
        'zone_ids': ['{{ vac_zone }}']
  - delay: 00:01:00
  - wait_template: "{{ is_state('vacuum.rockrobo', 'docked') }}"
  - condition: and
    conditions: 
      - condition: numeric_state
        entity_id: vacuum.rockrobo
        above: 0
        value_template: "{{ state_attr('vacuum.rockrobo', 'last_run_stats').area }}"
      - condition: template
        value_template: "{{ vac_zone in ('Woonkamer', 'Slaapkamer', 'Badkamer', 'Hal') }}"
  - service: counter.increment
    data_template:
      entity_id: >-
        {% if vac_zone == 'Woonkamer' %}
          counter.vacuum_living_room
        {% elif vac_zone == 'Keuken' %}
          counter.vacuum_bedroom
        {% elif vac_zone == 'Slaapkamer' %}
          counter.vacuum_hallway
        {% elif vac_zone == 'Badkamer' %}
          counter.vacuum_bathroom
        {% endif  %}
  - service: counter.configure
    data_template:
      step: "{{ (states.vacuum.rockrobo.attributes.last_run_stats.area|round(0))|int }}"
      entity_id: counter.vacuum_total_area_since_emptying
  - service: counter.increment
    entity_id: counter.vacuum_total_area_since_emptying